<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAClGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAZOklEQVR4Xu3dfYwc
        9XkHcO/OcL41d769XbucKjc2iisuEUmd1Kg0dSNHsVSjmOIUUKGAiqtYDSpIRRVNLFoZlFgUUQoRqUiE
        Ea4wIlGMcIQRRjLCapxyiV3hKKYYySm+xn8YnffNXt3unfel32f32dO97N3ty8zsb2a+H2mY38yZvb3d
        eZ555jcvv8gKIjPZyWRyI+ajlUplYyQSuaFardqY92PdSO1frFgR12kG/k0R/+aiti9hlpc21v0Gy+fw
        Wmf7+vrOTUxM1NaHHRMA9dzQ0NAGBOiWaDT6BwjSWtBjWeZ27R+4AL/nAn7HGUkKmH9ULpdP5HK50/rj
        0GACIM+tXbt25OrVq9sQeF/FtBWrNtR/0nNZJITjeE/vYDqWSqXO6vrAYgIgL9jDw8MS8LchwLZiPqrr
        jYb3ehHv9TgOG9685pprDgfxsIEJgFyD0n6TZVn3IJDuQiCt09W+hL9Bgv8Q/o5X0un0sfpa/2MCIEcl
        Eol1GvD3YHFTfW2w4O+7gNmBaDT6it8PE5gAyBHJZHIzSuVHEfg7sOha551pkAzGkAieRCI4rKt8hQmA
        uoLA34og2IumdOaF2WkkwKez2eyP0C7VV5mPCYA6gsDfqXv8zbqKAMnwHGZPrl69+uD4+HixvtZcTADU
        lng8vgMl73fQDOTxvVOQCORipMczmcx+zI2tCJgAqCXaufcc9vg7dRW1QPsIHkqlUqd0lVEsnRMtRs7h
        /yPmP0bwf76+ilqFz0xOf/5Nf3//76xcufK9qakpow4LWAHQohD4W7ABP4/mjfU11A05LMD0SDabPair
        eo4JgBZYu3btQLlcfgbNb9TXkMOOWpa1a2JionbTUi8xAdAc2OvfiL3+q2hyr+8iqQbwOd/X66sK2QdA
        MxKJxP2YvabHreQifMYDmP1Vf3+/VSwWT6Bdqf3AY6wAqFbyl0ol6eGXBEAeQzVwzLbt+3pxSMAEEHIs
        +c3Qq0MCHgKEmPTyY/YuS/7em3VIMIFDAs+uGWACCCkc79+B2evY8FbV15ABovg+diAJRJAEjus6VzEB
        hBD2/N/EhvYipj5dRQbB97I1FouNFAqFt7HoaucgE0DIYM//T9jAnkYzWl9DhtqMSuCzg4ODb01OTk7r
        OsexEzBEsOd/BsH/97pI/nDCsqxb3HocGRNASDD4fc21JMAyMAQQ/N9m8PvallKp9DLmjj9piX0AAYfg
        /waC/3u6SD6F73A0Fov9bqFQeENXOYIJIMDkVB82nJfQZKUXDF/s7++3i8Xiu7rcNfYBBBT2/HKRz1tI
        AHKBCbWuVK1W5Rz8GUyf4POTy3MvyJV60WhUnuwzgvYGTGvws+uwPIq2jHkgQ5Z55aF0Ov19bXeFCSCA
        EPxyWe97DP7WIIDlIR1HMX8N05FcLpet/6Q1ei/FDnzeX8P/v9ODz12S1K2ZTOaoLneMCSBg9F7+99Dk
        tf3LQBDJ9ff7LMs64FQP+/r16/uvXLlyF177Cbx2YxBTN8jAp19AJSBjFHSMCSBgsPd/CRse7+pbAoJT
        9vhPViqVZ9vd27dKEsHly5cfxHfxKBbnjGDsoBNIAF/BvOOHjrITMEDkfn5scI/pIjWB4D9g2/atqVTq
        iJvP50NiKRWLxf/q6+v7YTQaldN3X6r/xFGfisVifYVC4R1dbhsrgIDgcf+yZC/5CPaYz9YXvRWPx+/F
        d/MCJsc7C5HUbum0P4AJIAB43L8sKfPv9Ppe+/lQod2MYJU7MJ3uG+i4P4DnhwMAwf8UZgz+JhBwZxFw
        f9zr4Bd4D2N4LzfJe9JVTlmDSR7q0jZWAD4nexXMZO9PC2Uty7ppYmJChusyBiq2kVKp9L7TlQASy24d
        iahlrAD8zcaX/py2aS455r/TtOAXeE9yUdGt+O4cvbkHCeWpgYEBqQZaxgTgY9j7y4M9ODhnc9Lh1/Oy
        fzE6VNju+pJj4n19fU9ouyU8DehTUkZiD/Iaml5eguoL+FwOoBTeo4vGKhaLZ+TafiTxL+sqJ3wxFou9
        XSgUWuoQZAXgU9rx59YFJr6F4C/atm188DesXr16H96z048Dl+HcWrp1mBWADyWTya2Y/Vt9ieb5F5TX
        jt4y6ya5YAh77ByqgD/XVU4YwWtOoAr4pS4vimcBfAjH/nI7qCQBmiuLyuh6ty7vdZGMwPwhksBGXe6a
        VBWoLq4fHx9f8mpHHgL4jO79GfxNYKPf58PgFyUEv6OHLXi9kStXrnxTFxfFCsBnuPdvTo/917rx3Dyv
        oAr4LQLXsUFaWqkCWAH4CPf+Szrq5+BXh3TuiFaqACYAH0FG/wdt0jzY2H+qTd+KRqOO/w26zSx6RoAJ
        wCeGhoY2YbajvkTzlKanp49o27dSqZQMEy439jhGDilw2HivLi7ABOAT2Dvs1SbNg73c8Xw+72jg9Ihc
        vny43nQOPh95KElTTAA+INd3I5Nz7784eYBnUHygc8dg29mIKmCbLs7BBOADfX19UsI5PihEgHyic9+T
        nnttOgqve48252AC8IHFvjyqwx7OlaDpBRzqufW33CHPKdT2DCYAw8mjvrCB846/pXX1ZFyTIAG48rdg
        GxrI5XJ36OIMJgDD4Yvj3n8ZbpXNPeLa34LksmBbYgIwHDbuRU/hUB027I4fi22aVatWufm3bJPbyLVd
        wwRgMOm5RQXg2KWhAebmAByeymazbv4tdrlcvkvbNUwABsPe/2vapCXgc9qgTd+zbdvtv+U2ndcwARgM
        e39e998CJIC2noNnMrf/Frz+zbPPBjABGGpoaEie9iOX/9IykChllN6gcPVwBp9Vfz6flydJ1zABGMqy
        rKZXblFTozr3Peyhb9CmayqVyle1yQRgsJkviZaGoJHe7aAMibZT526a2bkwARgKGzWP/1skZS32ar6v
        mOSOTy/O+uB3bG4kTCYAA8m5WnxJgSlrvYCEebs2fSsajXr1N9ilUmmLNJgADIQvh3v/NiEB7Gx2rbvP
        zDlH77I/kf8wAZiJe/82oWJqeq27X8jj3vA3OPZU4BbUBpNlAjAQNgTXe4KDCJ/bXr9WAahgvqNNTzSS
        DROAmVgBdEA26lYehW0a7P2l5792TO6h2jbGx4IbaHh4+Ao25qCc1vKa3wYHcXxQkFbhd36GFYBhEonE
        OgZ/V+KWZX1L28bD9y0jPHse/AKJciMTgGFwLFjrnKGufBuBZXyHIPb8UvY/U1/yHhLPKBOAYXq1Nwga
        JNKX5GlKumgcqfQw+wmmnj3rEdvap5kADIMNNzB3tvWSHka9rjdVGUWvwnsD77HXzzFgBWCgpM6pS1JN
        WZb1ukn3Cch7KZVKL6NpxJ2eTADmYQegs7Yi4E4mk8men1qVsr9cLv8MicmLG36WhWpzgAmAAg8BN1qp
        VE7G4/GeDa4iHX4IuJNoGvOMB3wua5gADIMvJTCPtzIJPteBaDT6BgLxMY+vFrSx538Qv/9dTMY9u5AJ
        gEIFQbj3ypUrH6IacP1py3KFHxLOr9F8DpNxIztJhzMTgGHkuEyb5J4NqAZeRnBK34Djd17iNTdjr/8u
        vsvXkXCMvaxbqiJeCmwYbDgfY8bDAG+dQbAeRkC8mU6nx3RdW+RhHpZlSR+D3NPvm2c5MgEYhgmgt5AI
        LiARHEXzA7QvolKQSYbruiiDdshz++XR3fiZXK8xgrncubkd/48vL+BiAjCMlKXYmDgWIHmCfQCGQfDn
        tUnkKlQveSYAopDCzuYSE4BhkJXPa5PIdUwARCGFnQ0rAAOxD4A8If1NTADmSemcyHVMAIaRjhltErnt
        LBOAYXBcdk6bRK7CtvYbJgDDoAI4o00iVyEBnOWVgAYa5mPByQPYxvhYcBPhi+FhALmtlEql2AdgqLM6
        J3JLbRtjAjAQjs0+0iaRKxqdzUwAZmIFQG6rdTYzARjItu3j2iRyy8/lP0wABpqYmLgop2h0kchpJexk
        TkiDCcBQkUiEVQC5AjuXU9jJ1O45YQIw1zs6J3LaMZ0zAZiqXC7PfElETopGozM7FyYAQ+VyuSxmp+tL
        RM5A+V8cGBiYefIxE4DB8GWxH4AcFYlExsbHx4u6yARgMnxZb2qTyCk/1XkNbwYy3PDw8G+RCNbpIlE3
        SpZl/Z6cZtZlVgCmQ/Af1CZRt47NDn7BBGC4arX6ijaJulKpVBZsS0wAhstkMjJu3SldJOoItqH80NDQ
        IV2cwQTgAzgMYBVA3To0u/e/gQnAB6anp6UfoFRfImrfYjsRJgAfyOfzl1DCHdFForZg2zmXTqebXlnK
        BOATlUrlcW0StQV7/33aXIDXAfhIIpF4A7Md9SWi5WHvfyGTyVyPZtNDSFYAPoJM/rQ2iVqi28yi/UdM
        AD6SSqXk3gDeH0Atwd7/4uDg4A90sSkmAJ9BRmdfALUE28qTzU79zcYE4KG1a9cO4Dj+QV3sCKsAakUr
        e3/BBOARCf5yufwWms+gvbG+tjOsAmg52Eb2Lbf3F5bOyUWzgn8LpmilUlldLBbn3JbZjkKhcD4Wi0kS
        +Xx9DdEcZ9Lp9G7MK/XFxbECcNm84K9Bdr632yrAsqxHMJOnBhHNgfL/AcxaunKUFYCLmgW/6roKmJyc
        zKMKmEJze30NUc3BTCbzPW0vixcCuWSJ4G+QhzN8ZmJiopuBQO1EIvE+5jfWFynksrpNzbnnfyk8BHBB
        C8Ev7FKp9Ki2O1XSco9IPN5O8AtWAA5rMfgbnKgC5LFhL0Uikft1kcLpdDqdvgnztu4aZQXgoDaDXzhR
        BchYgg+hEugqiZB/4bvPY0dyJ5pt3zLOCsAhHQR/Qwl778+lUqmuxgIcGhraFI1G38Nr9esqCgkkgLsz
        mcyPdLEtrAAc0EXwCxtf4Ava7lgul5NBRB6uL1GI/KDT4Bc8DdilLoO/4VOxWCxVKBR+qcsdKRaLp/A6
        o2jyrEA4nB4cHLwTyb/t0r+BhwBdcCj4G+Sins+l0+kL9cXOyHsqlUrv41CgqwuNyGxy3G/b9he67UDm
        IUCHHA5+Ecf0fL3ZOWwQ+UqlcqdsILqKgml3t8EvmAA64ELwN+xIJBJ3aLtj2h/QUa8w+cLD3Rz3z8ZD
        gDa5GPwNl/D6v6+jA3dFk8mrmOzaCvI9VHbPIvgd6+xlJ2AbPAh+sQrH7yPd3CfQUCgU/icWi11Bk/cL
        BINc5/+32nYEE0CLPAr+GiSATQjcnyOA/1dXdQyvMdbf34+XjGzVVeRPR9Lp9N2YL3uLbzvYB9ACL4O/
        AaWeY7342Gs8JqWjLpL/nLAsS4Lf8T4dVgDL6EXwg3TyfF/bjsAhxduoBOKoBG7WVeQPEvy3yNkdXXYU
        E8ASehX8KPVc2VtrErCRBL6sq8hgqNoO27Z9u1vBL5gAFhG04G9AEng3Fovl0GTHoMEQ/AdQBd43OTm5
        7HP9usEE0ERQg79BOgaRBD5A8y8wsR/IPP+K4P87zB3t8GuG1wHME/Tgny0ej+/A4cCrmAZ0FfWep9sC
        E8AsYQr+hmQyuRnl5k/Q3FBfQz2SRSLelUqlDuuyJ5gAVBiDv2FoaCgejUblqUI7dRV5CAn4lNy/kcvl
        zusqz7APAMIc/GJqaqoIP9bOwW2Y2C/gEbk+A8f7f4nvIK2rPBX6CiDswT8fDwk805OSf75QJwAGf3N6
        SPACNtCu70ykhZBgx1Dy392Lkn++0CYABv/yhoeH5VqB55AI+HARZ2QR/HtQ8u9H24hbtUPZB8Dgb02x
        WDx33XXXvTA9PT2FDfdLSAS8rbhz+/E53nb58uX/RNv18/utCl0FENDgt+Px+PZsNntElx2Hw4INOCx4
        hmcK2oPEeQqf2UP4/sd0lVFCVQEENfhRqr+K4PxuLBbrLxQK7+h6R01NTWXlTMHKlSv/Gxv0Z7FqpP4T
        agaBLyP0PCJX9OE7+b/6WvOEpgIIcvAjIGc667DhHbJte5ebN5CIZDK5E79rL5qb6mtI4DM5h+/j3wcH
        B3/Qyvj8vRaKBBCW4G/ARjiGJPB1JIG2xonrhCSCSqXyLbyPUN9mrIG/D9/5QSz65lmMgU8AYQv+Wc7j
        57d0O+JQq5AItmpFEKonD+FvPovP+Um/BX5DoBNAiIO/BhtnHv/u63g/x3SV6/CZbyyVSn+N33svFoN6
        MdElTIcw/Qc+WyM791oV2AQQ9uCfpTaEuJ579pRWBfdgugvv2e93HMrneAR/xys4vj/ih+P7VgQyATD4
        F8LGe+jq1asP5PN52Xt5av369f2XL1/eifd+G97HVsx9cQYB71UqqBNovj09PX2wF5+d2wKXABj8S7qE
        19jd6+vPURmMVioV6Sv4M7wfmcuoSD2HgC/i/UhJL6dSj+E7PYV5oAdXCVQCYPC3Bhv6AQTgw04MPuIE
        Hdp8G/7GT2NRBjaVAU7XyM9cJJflSs/9Wcw/wO8fGxgYGAtKad+qwCQABn97sNFfwPSAm1cPdkNuSLIs
        SxKBTDfgvcphgzzVuFYtYHkd2jK0ugx60DikkITWSGoyyKrsvYv4N3I6VNZ/hEA/K5MXp0j9IBAJgMHf
        OQSHUdUAecv3lwIz+LuD37EJ073XXnvtx4VCwZNrBsgcvq4AGPzOQjUwhvJ4TyqVOq6rKOB8mwAY/O5B
        IjisiYAVQcD5MgEw+D0hF74ctG17DzvMgst3fQAMfs9E8X42VSqVB+U245UrV74vDw/Vn1FA+KoCYPD3
        lFwFtx+f/w9NeJYdOcM3CYDBb5SjmF7EZyNXFAb6Srmg80UCYPCbSS6wwfs/wKrAv4xPAAx+32BV4ENG
        JwAGv//g+7qe1YB/GDsEFIOfyH1GJgAGP5E3jEsADH4i7xiVABj8RN4yJgEw+Im8Z0QCYPAT9UbPEwCD
        n6h3epoAGPxEvdWzBMDgJ+q9niQABj+RGTxPAAx+InN4mgAY/ERm8SwBMPiJzONJAmDwh0dfX1/gxs8L
        MtcTAIM/VM5MTEzktU0+4GoCYPCHzmmdk0+4lgAY/KFTwvf9tLbJJ1xJAAz+8KlWq3tyuRwrAJ9x/JFg
        DP5QOojPfxfmfBagzzhaATD4Q0fG2L8bn/99aDP4fcixCoDBbxwpx90Y8ltGBzqD6ReWZZ3gsGH+5kgC
        YPCbB+/7Kxzll5bT9SEAg5/Iv7pKAAx+In/rOAEw+In8r6MEwOAnCoa2EwCDnyg42koADH6iYGk5ATD4
        iYKnpQTA4CcKpmUTAIOfKLiWTAAMfqJgWzQBMPiJgq9pAmDwE4XDggTA4CcKjzkJgMFPFC4zCYDBTxQ+
        MwkAwf8UZgx+ohCpJQDZ+1er1ftra7zB4CcyQC0BlEqlHQiW/toa9zH4iQzROAT4I527jcFPZJBaAkDA
        bK0tuYvBT2SYWgLA8f9obck9DH4iA0WTyeQoAse1438kl2cZ/N6bmpqSR3cTLSlaqVQ2aNsN523b/mdt
        u4HB3wSS7oV8Ps9humlZUQTPiLYdh9fe5eJw0Qz+xY3pnGhJUewt3KoAjrs4MAWDf3ElVHX7tE20JKkA
        rtO2o5BY3BoplsG/BHzuHKWXWiZnAQbqTWchQH+lTScx+Je2P5PJuNnhSgEjCWBdveksBOl5bTqFwb8I
        6fRD2X9rOp3ejUWO0kstiyCoTiKoNuuyY7BR7sbeaL8udsvPwX8Un4XjI+jis5BA/wCvfcq27dMudrZS
        gEUSicTHmDveEYgN81kkgId1sRu+3vPjfXOUXjJW414AxzlUVbDsJ3KRawkAtsTj8R3a7gSDn8hlbiYA
        qQKeHxoaiutiOxj8RB5wOwGssyzreTTt+prlycNJGPxE3nA1Aai7EonESVQCm3R5UQj87eVy+dcMfiJv
        eJEAxCZUAieRCJ7AtE328rp+xcDAwBrpK8D6lxH48lBSN29OIqJZXDsN2IIz1Wq1H0G/UZcDCX8fTwOS
        sbyqAJq5MejBT2Q6SQBOX7JLRD7RywqAiHpMEoDj16kTkT/IA0GK2iaikJEHgvDZcUQhJYcAuXqTiMJG
        EsDZepOIwkb6AJgAiEIqunr16nPaJqKQiY6PjxdZBRCFU+1CoEgkwiqAKIQaVwKyAiAKoVoCqFQqbjzD
        n4gMV0sA1Wr1RG2JHBeNRi9ok8g4EZ3L03g+jEQio7pIzsim0+lhbRMZp9EHII7qnJzDUXrJaLMTwGs6
        J2eUyuXyHm0TGWkmAWQyGekH4MNBHFKtVvdxlF4y3ewKQLyoc+qOjNL7XW0TGWumE1DIIB6WZclDQjsZ
        zCP0sNe/gOmBbDZ7RFcRGW1OAhDDw8OPRSKRvboYCAhKeeqRW52cMirvryqVyimU/GfQ5vDc5BsLEoA8
        s79cLv8MzWUH8vADCf5oNCqP5ubVjkTzLEgAAocCGxA076ESGNFVvsTgJ1ra/E7AGpSy523b/lM0paT1
        JQY/0fIsnS8wOTmZHhgYeBnHtquwuAnVQMsDfPYag5+oNYsmAIEkMF0sFt8eHBx8EYnARhKQkXwkIRiL
        wU/UuqZ9AItZv359fz6f344gux2L2zGtqf3AEHhfYwj+XQx+ota0lQDmSyaTm1EZbEVl8IcIPqkORtGe
        GfnXbfidefy+E5j/Au/jMK+8I2pPVwmgmUQisQ4BKQN/yp2FN2CSi4rkbIL0IazDJGS+XJ9CVia8lpzD
        l3PtclvtBbzuJwj281h/RjorsY6IOrJixf8DbHR3nfjxuAMAAAAASUVORK5CYII=
</value>
  </data>
</root>